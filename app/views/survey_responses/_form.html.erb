<% if survey_response.errors.any? %>
  <div id="error_explanation">
    <h2><%= pluralize(survey_response.errors.count, "error") %> prohibited this survey_response from being saved:</h2>

    <ul>
    <% survey_response.errors.full_messages.each do |message| %>
      <li><%= message %></li>
    <% end %>
    </ul>
  </div>
<% end %>

<div class="form-group">
  <label for="name">Name</label>

  <%= text_field_tag :name, nil, id: :name_text, class: 'form-control',
  placeholder: "Your Name (or some other identifier)" %>

  <small id="nameHelp" class="form-text text-muted">
    This will not be randomized.
  </small>
</div>

<% SurveyResponsesController::SURVEY_QUESTIONS.each_with_index do |q, i| %>
  <div class="form-group">
    <label for="question<%= i + 1 %>"><%= q[:long] %></label>

    <%=
      select_tag "q#{i + 1}", options_for_select(
        q[:choices].map.with_index { |x, k| [x, k] }
      ),
      id: "q#{i + 1}_text",
      class: 'form-control'
    %>

    <small id="q<%= i + 1 %>Help" class="form-text text-muted">
      This response will be randomized to protect privacy.
    </small>
  </div>
<% end %>

<%= form_with(model: survey_response, local: true, id: :survey_response_form) do |form| %>
  <%= form.hidden_field :name, id: "name" %>
  <%= form.hidden_field :question1, id: "q1" %>
  <%= form.hidden_field :question2, id: "q2" %>
  <%= form.hidden_field :question3, id: "q3" %>
  <%= form.hidden_field :raw_question1, id: "raw_q1" %>
  <%= form.hidden_field :raw_question2, id: "raw_q2" %>
  <%= form.hidden_field :raw_question3, id: "raw_q3" %>

  <div class="actions">
    <%= form.submit "Submit", class: "btn btn-primary" %>
  </div>
<% end %>

<script>
  $("#survey_response_form").on('submit', function() {
    $("#name").val($("#name_text").val())

    for (var i = 1; i <= 3; i++) {
      var qtext = "q" + i
      var ocount = $("#" + qtext + "_text option").length
      var randomized = diffpriv(parseInt($("#" + qtext + "_text").val()), ocount)

      $("#" + qtext).val(randomized)
      $("#raw_" + qtext).val(parseInt($("#" + qtext + "_text").val()))
    }

    return true
  })

  function diffpriv(num1, range) {
  	// init epsilon to 1
  	var epsilon = 1;

  	// all possible return values

  	var incorrect_return_values = [...Array(range).keys()];
  	incorrect_return_values.splice( incorrect_return_values.indexOf(num1), 1 ); // remove num1

  	var correct_prob = Math.pow(Math.E, epsilon) /
      (Math.pow(Math.E, epsilon) + range - 1); // if y = v

  	var incorrect_prob = 1 /
      (Math.pow(Math.E,epsilon) + range - 1); // if y != v

  	// get random number in [0,1]
  	rand = Math.random();

  	// output based on rand
  	if (rand <= correct_prob) {
  		return num1;
  	}

    for (var i in incorrect_return_values) {
      var threshold = correct_prob + (incorrect_prob *
        (parseInt(i) + 1))

      if (rand <= threshold) {
        return incorrect_return_values[i]
      }
    }
  }
</script>
